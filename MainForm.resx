<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAMIOAADCDgAAAAAAAAAA
        AABSMQZ1UTAG004sA8BOLAO/TSwDwE0sA8JNLATETCwExEwsBMNMLATCTSwEw00sBMJMLAPCTCwDwlEx
        B9JbPA+DUS8H3FMzDFVNKwU1TSsFK0spAw9MKwUQTC0IEUotCBFKLAcRSy8NHEstCxVNLw0cTCwIGk0r
        Bi1MLAZKUDAH3FQyC9pbOxc9TSwEy00sBZlRKQoCTCsGAEwuCwBKLw0ATS4IBU0uC3RMLw41Ty8MdU8u
        CklOKwW5TiwGOE8uBMpWMwvbY0UiKU0rBT5NLAUuMQAAAE8vBwBuGAAASzMXB0s0GAhNLw4WTzETBk4t
        CRVPLQgRTSsFM04sBR5QLgTLVjML3GlNKiBNKwUATS0HAFQ6FwlPMApLTS4Ij0wuB6NNLgijTi8JkU8x
        DFNTOyALUTEJAE0rBQBNLgQUTy4EzFYzC9xpTCohTC4IAFA0EBlOMAqXTi8IqU4uCV9MLQc0TC0FMk0t
        BVhPLwakUjEKolI1ECFUOBQATS0EFU8uBMxXNArca00nIEotCAlMLwmbTC8LiUwvCw5NLQYATS0EAE4u
        BABPMAgATi0DClEuBX5TMwuoW0EhD0wsAxRPLgXMVzQJ3G5RJR1MLgdJTzEMslU7Gg9MLgkATDALF04x
        C2hPMw5sUjgWHE4tBABMLAIKTy8HrVI0EFtKLAURTi8FzFY0CdxrUCkeTS8GhVQ3EXVGKQQATS8GBk4v
        B5NOMQqiTjAJnk8yC59OOBkKUS0JAE0tBWpPMQqZTDAMFU4uBsxXNArcak4sH04vBpBYOhNlhXFWAEwt
        BQ1NLwizTDIRck0yD25PMQi6TjIQHVEwEj9OLwdfUDILo04yDxdOLgbMWDQJ3G5RKx1PLgVtWToSj/H4
        /wAdAAABTC0GW0suCrROMAqzUTMLYVEvDD9TMA+IUDEIilAyC4FOLwgSUC4EzFc1CtxrUCseTCoBIlQ0
        C7tyWDVD////Aq+TbQBKLAcaTzINHEwtDCVPLguOUTAMYU4vB7xRMw4vTC0DElAuBMxVNAvcaE0qIWZP
        LwhPLwZUWzwUwHNZNWGPeVwUAAAAAAMAAABTNBInUjINck8uBrdQMAlfbFEwCU4vCBZOLgXMUzIL215C
        HS9TNQ6PWz8bKUspADtUMwqfVjcQqlM1D5JSMw2QUjEKpVAuB6FMLARESykDH1Y0DZJZOxQsTC0Fy1Ew
        CNldPxpYWjwXRot2WymzpZMZlYFpInBWNkVmSyliZ0soYnFWNkiTfmYks6WTGY95YCZmSCVLUzQOTU4u
        BtpPLgRtUjIJzVY2DsdjRiDTZUgi1mVHItVlRyLTZkgi0WdIIdFnSCHTZkci1WRHItZkRiLVXT4YzFEw
        B89PLwZ9AAAAAAAAAAAHAAAADgAAADAMAAAgBAAAA8AAAAQgAAAIEAAACAAAAAgAAAACAAAAAYAAAAAA
        AAAAAAAAAAAAAA==
</value>
  </data>
</root>